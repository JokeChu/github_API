<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.graduation.dao.DeveloperMapper" >
  <resultMap id="BaseResultMap" type="com.graduation.model.Developer" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="login" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="avatar_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="company" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="blog" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="bio" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="public_repos" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="followers" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="following" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="created_at" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updated_at" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updated" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, login, name, avatar_url, company, blog, email, bio, public_repos, followers, 
    following, created_at, updated_at, updated
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.graduation.model.DeveloperExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_developer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_developer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_developer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.graduation.model.DeveloperExample" >
    delete from tb_developer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.graduation.model.Developer" >
    insert into tb_developer (id, login, name, 
      avatar_url, company, blog, 
      email, bio, public_repos, 
      followers, following, created_at, 
      updated_at, updated)
    values (#{id,jdbcType=BIGINT}, #{login,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{blog,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{bio,jdbcType=VARCHAR}, #{publicRepos,jdbcType=INTEGER}, 
      #{followers,jdbcType=INTEGER}, #{following,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into tb_developer (id, login, name,
    avatar_url, company, blog,
    email, bio, public_repos,
    followers, following, created_at,
    updated_at, updated)
    values
    <foreach collection="list" item="developer" separator=",">
      (#{developer.id,jdbcType=BIGINT}, #{developer.login,jdbcType=VARCHAR}, #{developer.name,jdbcType=VARCHAR},
      #{developer.avatarUrl,jdbcType=VARCHAR}, #{developer.company,jdbcType=VARCHAR}, #{developer.blog,jdbcType=VARCHAR},
      #{developer.email,jdbcType=VARCHAR}, #{developer.bio,jdbcType=VARCHAR}, #{developer.publicRepos,jdbcType=INTEGER},
      #{developer.followers,jdbcType=INTEGER}, #{developer.following,jdbcType=INTEGER}, #{developer.createdAt,jdbcType=TIMESTAMP},
      #{developer.updatedAt,jdbcType=TIMESTAMP},#{developer.updated,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.graduation.model.Developer" >
    insert into tb_developer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="login != null" >
        login,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="blog != null" >
        blog,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="bio != null" >
        bio,
      </if>
      <if test="publicRepos != null" >
        public_repos,
      </if>
      <if test="followers != null" >
        followers,
      </if>
      <if test="following != null" >
        following,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="updated != null" >
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="login != null" >
        #{login,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="blog != null" >
        #{blog,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="bio != null" >
        #{bio,jdbcType=VARCHAR},
      </if>
      <if test="publicRepos != null" >
        #{publicRepos,jdbcType=INTEGER},
      </if>
      <if test="followers != null" >
        #{followers,jdbcType=INTEGER},
      </if>
      <if test="following != null" >
        #{following,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.graduation.model.DeveloperExample" resultType="java.lang.Integer" >
    select count(*) from tb_developer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_developer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.login != null" >
        login = #{record.login,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null" >
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.blog != null" >
        blog = #{record.blog,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.bio != null" >
        bio = #{record.bio,jdbcType=VARCHAR},
      </if>
      <if test="record.publicRepos != null" >
        public_repos = #{record.publicRepos,jdbcType=INTEGER},
      </if>
      <if test="record.followers != null" >
        followers = #{record.followers,jdbcType=INTEGER},
      </if>
      <if test="record.following != null" >
        following = #{record.following,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_developer
    set id = #{record.id,jdbcType=BIGINT},
      login = #{record.login,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      blog = #{record.blog,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      bio = #{record.bio,jdbcType=VARCHAR},
      public_repos = #{record.publicRepos,jdbcType=INTEGER},
      followers = #{record.followers,jdbcType=INTEGER},
      following = #{record.following,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduation.model.Developer" >
    update tb_developer
    <set >
      <if test="login != null" >
        login = #{login,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="blog != null" >
        blog = #{blog,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="bio != null" >
        bio = #{bio,jdbcType=VARCHAR},
      </if>
      <if test="publicRepos != null" >
        public_repos = #{publicRepos,jdbcType=INTEGER},
      </if>
      <if test="followers != null" >
        followers = #{followers,jdbcType=INTEGER},
      </if>
      <if test="following != null" >
        following = #{following,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduation.model.Developer" >
    update tb_developer
    set login = #{login,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      blog = #{blog,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      bio = #{bio,jdbcType=VARCHAR},
      public_repos = #{publicRepos,jdbcType=INTEGER},
      followers = #{followers,jdbcType=INTEGER},
      following = #{following,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>